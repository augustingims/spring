<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.ui.Model"/>
<fullyQualifiedTypeName name="com.teamdev.app.services.dto.UserDTO"/>
<fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
<fullyQualifiedTypeName name="com.teamdev.app.security.CurrentUser"/>
<fullyQualifiedTypeName name="com.teamdev.app.security.UserPrincipal"/>
<fullyQualifiedTypeName name="com.teamdev.app.services.dto.UserSummary"/>
<fullyQualifiedTypeName name="com.teamdev.app.services.dto.UserIdentityAvailability"/>
<fullyQualifiedTypeName name="com.teamdev.app.services.dto.UserProfile"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="com.teamdev.app.exception.ResourceNotFoundException"/>
<fullyQualifiedTypeName name="java.io.Serializable"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="org.hibernate.annotations.NaturalId"/>
<fullyQualifiedTypeName name="javax.persistence.FetchType"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.example.demo.entities.Country"/>
<fullyQualifiedTypeName name="com.example.demo.services.CountryService"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.example.demo.repositories.CountryRepository"/>
<fullyQualifiedTypeName name="javax.persistence.EntityManager"/>
<fullyQualifiedTypeName name="org.springframework.data.repository.query.Param"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
<fullyQualifiedTypeName name="javax.persistence.Query"/>
<fullyQualifiedTypeName name="com.example.demo.services.utils.UtilsMethods"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="lombok.Setter"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.ToString"/>
<fullyQualifiedTypeName name="java.net.UnknownHostException"/>
<fullyQualifiedTypeName name="com.teamdev.app.web.rest.PersonneResource"/>
<fullyQualifiedTypeName name="com.teamdev.app.service.impl.CountryServiceImpl"/>
<fullyQualifiedTypeName name="javax.ws.rs.core.Response"/>
<fullyQualifiedTypeName name="io.swagger.annotations.ApiParam"/>
<fullyQualifiedTypeName name="javax.ws.rs.PathParam"/>
<fullyQualifiedTypeName name="com.teamdev.app.domain.Country"/>
<fullyQualifiedTypeName name="com.teamdev.app.service.PersonneService"/>
<fullyQualifiedTypeName name="com.teamdev.app.service.impl.PersonneServiceImpl"/>
<fullyQualifiedTypeName name="com.teamdev.app.service.dto.PersonnesDto"/>
<fullyQualifiedTypeName name="com.teamdev.app.repository.PersonnesRepository"/>
<fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="com.teamdev.app.web.rest.CountryResource"/>
<fullyQualifiedTypeName name="javax.ws.rs.core.MediaType"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.data.domain.Pageable"/>
<fullyQualifiedTypeName name="org.springframework.data.domain.Page"/>
<fullyQualifiedTypeName name="com.teamdev.app.domain.Personnes"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="com.example.demo.domain.Personnes"/>
<fullyQualifiedTypeName name="com.example.demo.repository.PersonnesRepository"/>
</qualifiedTypeNameHistroy>
